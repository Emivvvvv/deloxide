{
  "scenarios": [
    {
      "id": "scenario1",
      "title": "Classic Deadlock Scenario",
      "description": "A classic deadlock scenario where two threads each hold one resource and attempt to acquire a resource held by the other, causing a circular wait condition.",
      "file": "deadlock_scenario1.json"
    },
    {
      "id": "scenario2",
      "title": "Circular Deadlock with Three Threads",
      "description": "A deadlock scenario with three threads creating a circular dependency. Each thread holds one resource and is waiting for the resource held by another thread.",
      "file": "deadlock_scenario2.json"
    },
    {
      "id": "scenario3",
      "title": "Resource Hierarchy Solution",
      "description": "This scenario demonstrates how deadlocks can be avoided using resource hierarchy. Both threads attempt to acquire multiple resources, but they do so in the same order.",
      "file": "deadlock_scenario3.json"
    },
    {
      "id": "scenario4",
      "title": "Many Threads, Few Resources",
      "description": "A complex deadlock scenario with multiple threads (T1 through T6) competing for only three shared resources. This demonstrates how resource contention increases the likelihood of deadlocks in systems with high thread-to-resource ratios.",
      "file": "deadlock_scenario4.json"
    }
  ]
} 